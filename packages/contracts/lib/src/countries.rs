use lazy_static::lazy_static;
use std::collections::HashMap;

lazy_static! {
    pub static ref ALPHA3_TO_NAME: HashMap<&'static str, &'static str> = {
        let mut map = HashMap::new();
        map.insert("ABW", "Aruba");
        map.insert("AFG", "Afghanistan");
        map.insert("AGO", "Angola");
        map.insert("AIA", "Anguilla");
        map.insert("ALA", "Aland Islands");
        map.insert("ALB", "Albania");
        map.insert("AND", "Andorra");
        map.insert("ARE", "United Arab Emirates");
        map.insert("ARG", "Argentina");
        map.insert("ARM", "Armenia");
        map.insert("ASM", "American Samoa");
        map.insert("ATA", "Antarctica");
        map.insert("ATF", "French Southern Territories");
        map.insert("ATG", "Antigua and Barbuda");
        map.insert("AUS", "Australia");
        map.insert("AUT", "Austria");
        map.insert("AZE", "Azerbaijan");
        map.insert("BDI", "Burundi");
        map.insert("BEL", "Belgium");
        map.insert("BEN", "Benin");
        map.insert("BES", "Caribbean Netherlands");
        map.insert("BFA", "Burkina Faso");
        map.insert("BGD", "Bangladesh");
        map.insert("BGR", "Bulgaria");
        map.insert("BHR", "Bahrain");
        map.insert("BHS", "The Bahamas");
        map.insert("BIH", "Bosnia and Herzegovina");
        map.insert("BLM", "Saint Barth√©lemy");
        map.insert("BLR", "Belarus");
        map.insert("BLZ", "Belize");
        map.insert("BMU", "Bermuda");
        map.insert("BOL", "Bolivia");
        map.insert("BRA", "Brazil");
        map.insert("BRB", "Barbados");
        map.insert("BRN", "Brunei");
        map.insert("BTN", "Bhutan");
        map.insert("BVT", "Bouvet Island");
        map.insert("BWA", "Botswana");
        map.insert("CAF", "Central African Republic");
        map.insert("CAN", "Canada");
        map.insert("CCK", "Cocos (Keeling) Islands");
        map.insert("CHE", "Switzerland");
        map.insert("CHL", "Chile");
        map.insert("CHN", "China");
        map.insert("CIV", "Ivory Coast");
        map.insert("CMR", "Cameroon");
        map.insert("COD", "Democratic Republic of the Congo");
        map.insert("COG", "Republic of the Congo");
        map.insert("COK", "Cook Islands");
        map.insert("COL", "Colombia");
        map.insert("COM", "Comoros");
        map.insert("CPV", "Cape Verde");
        map.insert("CRI", "Costa Rica");
        map.insert("CUB", "Cuba");
        map.insert("CUW", "Curacao");
        map.insert("CXR", "Christmas Island");
        map.insert("CYM", "Cayman Islands");
        map.insert("CYP", "Cyprus");
        map.insert("CZE", "Czechia");
        map.insert("D<<", "Germany"); // Germany uses this in passports instead of DEU
        map.insert("DEU", "Germany");
        map.insert("DJI", "Djibouti");
        map.insert("DMA", "Dominica");
        map.insert("DNK", "Denmark");
        map.insert("DOM", "Dominican Republic");
        map.insert("DZA", "Algeria");
        map.insert("ECU", "Ecuador");
        map.insert("EGY", "Egypt");
        map.insert("ERI", "Eritrea");
        map.insert("ESH", "Western Sahara");
        map.insert("ESP", "Spain");
        map.insert("EST", "Estonia");
        map.insert("ETH", "Ethiopia");
        map.insert("FIN", "Finland");
        map.insert("FJI", "Fiji");
        map.insert("FLK", "Falkland Islands");
        map.insert("FRA", "France");
        map.insert("FRO", "Faroe Islands");
        map.insert("FSM", "Micronesia");
        map.insert("GAB", "Gabon");
        map.insert("GBR", "United Kingdom");
        map.insert("GEO", "Georgia");
        map.insert("GGY", "Guernsey");
        map.insert("GHA", "Ghana");
        map.insert("GIB", "Gibraltar");
        map.insert("GIN", "Guinea");
        map.insert("GLP", "Guadeloupe");
        map.insert("GMB", "The Gambia");
        map.insert("GNB", "Guinea-Bissau");
        map.insert("GNQ", "Equatorial Guinea");
        map.insert("GRC", "Greece");
        map.insert("GRD", "Grenada");
        map.insert("GRL", "Greenland");
        map.insert("GTM", "Guatemala");
        map.insert("GUF", "French Guiana");
        map.insert("GUM", "Guam");
        map.insert("GUY", "Guyana");
        map.insert("HKG", "Hong Kong");
        map.insert("HMD", "Heard Island and McDonald Islands");
        map.insert("HND", "Honduras");
        map.insert("HRV", "Croatia");
        map.insert("HTI", "Haiti");
        map.insert("HUN", "Hungary");
        map.insert("IDN", "Indonesia");
        map.insert("IMN", "Isle of Man");
        map.insert("IND", "India");
        map.insert("IOT", "British Indian Ocean Territory");
        map.insert("IRL", "Ireland");
        map.insert("IRN", "Iran");
        map.insert("IRQ", "Iraq");
        map.insert("ISL", "Iceland");
        map.insert("ISR", "Israel");
        map.insert("ITA", "Italy");
        map.insert("JAM", "Jamaica");
        map.insert("JEY", "Jersey");
        map.insert("JOR", "Jordan");
        map.insert("JPN", "Japan");
        map.insert("KAZ", "Kazakhstan");
        map.insert("KEN", "Kenya");
        map.insert("KGZ", "Kyrgyzstan");
        map.insert("KHM", "Cambodia");
        map.insert("KIR", "Kiribati");
        map.insert("KNA", "Saint Kitts and Nevis");
        map.insert("KOR", "South Korea");
        map.insert("KWT", "Kuwait");
        map.insert("LAO", "Laos");
        map.insert("LBN", "Lebanon");
        map.insert("LBR", "Liberia");
        map.insert("LBY", "Libya");
        map.insert("LCA", "Saint Lucia");
        map.insert("LIE", "Liechtenstein");
        map.insert("LKA", "Sri Lanka");
        map.insert("LSO", "Lesotho");
        map.insert("LTU", "Lithuania");
        map.insert("LUX", "Luxembourg");
        map.insert("LVA", "Latvia");
        map.insert("MAC", "Macau");
        map.insert("MAF", "Saint Martin");
        map.insert("MAR", "Morocco");
        map.insert("MCO", "Monaco");
        map.insert("MDA", "Moldova");
        map.insert("MDG", "Madagascar");
        map.insert("MDV", "Maldives");
        map.insert("MEX", "Mexico");
        map.insert("MHL", "Marshall Islands");
        map.insert("MKD", "North Macedonia");
        map.insert("MLI", "Mali");
        map.insert("MLT", "Malta");
        map.insert("MMR", "Myanmar");
        map.insert("MNE", "Montenegro");
        map.insert("MNG", "Mongolia");
        map.insert("MNP", "Northern Mariana Islands");
        map.insert("MOZ", "Mozambique");
        map.insert("MRT", "Mauritania");
        map.insert("MSR", "Montserrat");
        map.insert("MTQ", "Martinique");
        map.insert("MUS", "Mauritius");
        map.insert("MWI", "Malawi");
        map.insert("MYS", "Malaysia");
        map.insert("MYT", "Mayotte");
        map.insert("NAM", "Namibia");
        map.insert("NCL", "New Caledonia");
        map.insert("NER", "Niger");
        map.insert("NFK", "Norfolk Island");
        map.insert("NGA", "Nigeria");
        map.insert("NIC", "Nicaragua");
        map.insert("NIU", "Niue");
        map.insert("NLD", "Netherlands");
        map.insert("NOR", "Norway");
        map.insert("NPL", "Nepal");
        map.insert("NRU", "Nauru");
        map.insert("NZL", "New Zealand");
        map.insert("OMN", "Oman");
        map.insert("PAK", "Pakistan");
        map.insert("PAN", "Panama");
        map.insert("PCN", "Pitcairn Islands");
        map.insert("PER", "Peru");
        map.insert("PHL", "Philippines");
        map.insert("PLW", "Palau");
        map.insert("PNG", "Papua New Guinea");
        map.insert("POL", "Poland");
        map.insert("PRI", "Puerto Rico");
        map.insert("PRK", "North Korea");
        map.insert("PRT", "Portugal");
        map.insert("PRY", "Paraguay");
        map.insert("PSE", "Palestine");
        map.insert("PYF", "French Polynesia");
        map.insert("QAT", "Qatar");
        map.insert("REU", "Reunion");
        map.insert("ROU", "Romania");
        map.insert("RUS", "Russia");
        map.insert("RWA", "Rwanda");
        map.insert("SAU", "Saudi Arabia");
        map.insert("SDN", "Sudan");
        map.insert("SEN", "Senegal");
        map.insert("SGP", "Singapore");
        map.insert("SGS", "South Georgia and the South Sandwich Islands");
        map.insert("SHN", "Saint Helena");
        map.insert("SJM", "Svalbard and Jan Mayen");
        map.insert("SLB", "Solomon Islands");
        map.insert("SLE", "Sierra Leone");
        map.insert("SLV", "El Salvador");
        map.insert("SMR", "San Marino");
        map.insert("SOM", "Somalia");
        map.insert("SPM", "Saint Pierre and Miquelon");
        map.insert("SRB", "Serbia");
        map.insert("SSD", "South Sudan");
        map.insert("STP", "Sao Tome and Principe");
        map.insert("SUR", "Suriname");
        map.insert("SVK", "Slovakia");
        map.insert("SVN", "Slovenia");
        map.insert("SWE", "Sweden");
        map.insert("SWZ", "Eswatini");
        map.insert("SXM", "Sint Maarten");
        map.insert("SYC", "Seychelles");
        map.insert("SYR", "Syrian");
        map.insert("TCA", "Turks and Caicos Islands");
        map.insert("TCD", "Chad");
        map.insert("TGO", "Togo");
        map.insert("THA", "Thailand");
        map.insert("TJK", "Tajikistan");
        map.insert("TKL", "Tokelau");
        map.insert("TKM", "Turkmenistan");
        map.insert("TLS", "Timor-Leste");
        map.insert("TON", "Tonga");
        map.insert("TTO", "Trinidad and Tobago");
        map.insert("TUN", "Tunisia");
        map.insert("TUR", "Turkey");
        map.insert("TUV", "Tuvalu");
        map.insert("TWN", "Taiwan");
        map.insert("TZA", "Tanzania");
        map.insert("UGA", "Uganda");
        map.insert("UKR", "Ukraine");
        map.insert("UMI", "United States Minor Outlying Islands");
        map.insert("URY", "Uruguay");
        map.insert("USA", "United States");
        map.insert("UZB", "Uzbekistan");
        map.insert("VAT", "Vatican City");
        map.insert("VCT", "Saint Vincent and the Grenadines");
        map.insert("VEN", "Venezuela");
        map.insert("VGB", "British Virgin Islands");
        map.insert("VIR", "Virgin Islands");
        map.insert("VNM", "Viet Nam");
        map.insert("VUT", "Vanuatu");
        map.insert("WLF", "Wallis and Futuna");
        map.insert("WSM", "Samoa");
        map.insert("XKX", "Kosovo");
        map.insert("YEM", "Yemen");
        map.insert("ZAF", "South Africa");
        map.insert("ZMB", "Zambia");
        map.insert("ZWE", "Zimbabwe");
        map
    };
}
